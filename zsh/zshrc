setopt promptsubst

export EDITOR='subl -w'
export GOPATH="$HOME/go"
export JAVA_HOME="/Applications/Android Studio.app/Contents/jre/jdk/Contents/Home"
export NDK_HOME="$HOME/Library/Android/sdk/ndk-bundle"

export PATH="/usr/local/bin:/bin:/sbin:/usr/bin:/usr/local/sbin:/usr/sbin:/usr/local/go/bin:$PATH"
export PATH="$PATH:$GOPATH/bin"
export PATH="$PATH:$HOME/.cargo/bin"
export PATH="$HOME/.rvm/bin:$PATH" # Add RVM to PATH for scripting
export PATH="/usr/local/opt/gnu-sed/libexec/gnubin:$PATH" # gnu-sed
export PATH="$PATH:$HOME/Library/Android/sdk/platform-tools"

source $HOME/.dotfiles/zsh/aliases
source $HOME/.dotfiles/zsh/completions
source $HOME/.dotfiles/zsh/functions
source $HOME/.dotfiles/zsh/history
source $HOME/.dotfiles/zsh/keybindings
source $HOME/.dotfiles/zsh/pusher
source $HOME/.dotfiles/zsh/secret
source $HOME/.dotfiles/zsh/vcs

# Command timings
strlen () {
  FOO=$1
  local zero='%([BSUbfksu]|([FB]|){*})'
  LEN=${#${(S%%)FOO//$~zero/}}
  echo $LEN
}

# Show right prompt with date ONLY when command is executed
preexec () {
  DATE=$( date +"%H:%M:%S" )
  local len_right=$( strlen "$DATE" )
  len_right=$(( $len_right+1 ))
  local right_start=$(($COLUMNS - $len_right))

  local len_cmd=$( strlen "$@" )
  local len_prompt=$(strlen "$PROMPT" )
  local len_left=$(($len_cmd+$len_prompt))

  RDATE="\033[${right_start}C ${DATE}"

  if [ $len_left -lt $right_start ]; then
    # command does not overwrite right prompt
    # ok to move up one line
    echo -e "\033[1A${RDATE}"
  else
    echo -e "${RDATE}"
  fi
}

# Keep Apple Terminal.app's current working directory updated
# based on this answer: http://superuser.com/a/315029
# with extra fixes to handle multibyte chars and non-UTF-8 locales
if [[ "$TERM_PROGRAM" == "Apple_Terminal" ]] && [[ -z "$INSIDE_EMACS" ]]; then
  # Emits the control sequence to notify Terminal.app of the cwd
  # Identifies the directory using a file: URI scheme, including
  # the host name to disambiguate local vs. remote paths.
  function update_terminalapp_cwd() {
    emulate -L zsh

    # Percent-encode the pathname.
    local URL_PATH="$(omz_urlencode -P $PWD)"
    [[ $? != 0 ]] && return 1

    # Undocumented Terminal.app-specific control sequence
    printf '\e]7;%s\a' "file://$HOST$URL_PATH"
  }

  # Use a precmd hook instead of a chpwd hook to avoid contaminating output
  precmd_functions+=(update_terminalapp_cwd)
  # Run once to get initial cwd set
  update_terminalapp_cwd
fi

# make GPG stuff work

GPG_AGENT_SOCKET="$(gpgconf --list-dirs agent-ssh-socket)"
if [ ! -S $GPG_AGENT_SOCKET ]; then
  gpg-agent --daemon --pinentry-program /usr/local/bin/pinentry-mac >/dev/null 2>&1
  export GPG_TTY=$(tty)
fi

## Randoms

if which swiftenv > /dev/null; then eval "$(swiftenv init -)"; fi

openx () {
  # http://orta.github.io/rebase/on/opening-xcode-projects-and-workspaces/

  if test -n "$(find . -maxdepth 1 -name '*.xcworkspace' -print -quit)"; then
    open *.xcworkspace
  else
    if test -n "$(find . -maxdepth 1 -name '*.xcodeproj' -print -quit)"; then
      open *.xcodeproj
    else
      echo "No Xcode workspace or project found"
    fi
  fi
}

eval "$(direnv hook zsh)"
eval "$(hub alias -s)"

# added by travis gem
[ -f $HOME/.travis/travis.sh ] && source $HOME/.travis/travis.sh

function gittd { git tag -d $1 && git push ${2:-origin} :refs/tags/$1; }
function gcm { git commit -m $1 }

# Load NVM
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"

# Load RVM into a shell session as a function*
[[ -s "$HOME/.rvm/scripts/rvm" ]] && source $HOME/.rvm/scripts/rvm

# Load gcloud things
source /usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.zsh.inc
source /usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/completion.zsh.inc

# Set up the actual prompt
precmd() {
  vcs_info
  PROMPT="%2~$(prompt_git) %F{magenta}‚ùØ %f"
}
